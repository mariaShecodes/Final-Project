{"version":3,"sources":["services/auth.services.js","components/routes/ProtectedRoute.js","components/Home.js","components/Navbar.js","components/Login.js","components/Professional-form.js","services/professional.services.js","components/Patient-card.js","components/Patient-form.js","components/Patient-list.js","components/Professional-area.js","components/Register-patient-details.js","components/Patient-details.js","services/patient.services.js","components/Register-card.js","components/Register-form.js","components/Register-list.js","components/Patient-area.js","components/Register-details.js","App.js","serviceWorker.js","index.js","components/image/clipboard.svg","components/image/group.svg","components/image/iceberg.svg","components/image/negative-vote.svg"],"names":["Services","signup","username","lastName","email","password","role","job","speciality","numberCollegiate","examinationRooms","imageUrl","service","post","login","logout","loggedin","get","handleUpload","theFile","this","axios","create","baseURL","process","withCredentials","protectedRoute","Component","component","user","redirectPath","rest","render","props","loggedInUser","to","pathname","Home","className","Button","variant","href","id","Container","Row","Col","src","require","alt","Navbar","handleModalOpen","setState","showModal","handleModalClose","state","services","saludo","userInSession","data","image","userImage","userRole","onClick","ink","size","handleShow","Login","handleInputChange","e","target","name","value","handleCheckChange","checked","console","log","handleFormSubmit","preventDefault","authServices","then","theLoggedUser","setUser","checkRedirect","catch","err","AuthServices","onSubmit","Form","Label","Control","type","onChange","placeholder","Group","controlId","Check","label","SignupProf","handleChangeInput","handleSubmit","theNewUser","emial","history","push","handleFileUpload","uploadData","FormData","append","files","response","secure_url","as","signupPatient","professional","treatment","getPatients","getOnePatient","PatientCard","_id","SignupPatient","x","closeModal","updatePatientList","JSON","parse","localStorage","getItem","htmlFor","selected","disabled","PatientList","componentDidMount","updateList","patients","Modal","show","onHide","Body","map","patient","key","ProfArea","RegistersPatientDetails","title","dateCreated","context","think","feel","doing","happen","PatientDetails","registers","match","params","registersPatient","thePatient","description","register","newRegister","getRegister","getOneRegister","handleAudioUpload","headers","res","RegisterCard","NewRegister","updateRegisterList","RegisterList","PatientArea","RegisterDetails","App","showModalSignup","redirectRoute","setShow","handleClose","setTheUser","userID","setItem","stringify","removeItem","fetchUser","path","exact","ProtectedRoute","ProfessionalArea","PatientSignup","PatientDetail","RegisterDetail","Header","closeButton","Title","withRouter","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6a1ff9d4.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = (username, lastName, email, password, role, job, speciality, numberCollegiate, examinationRooms, imageUrl ) => {\n        return this.service.post('/signup', { username, lastName, email, password, role, job, speciality, numberCollegiate, examinationRooms, imageUrl })}\n    login = (username, password, role)  => this.service.post('/login', { username, password, role })\n    logout = () => this.service.post('/logout')\n    loggedin = () =>  this.service.get('/loggedin')\n\n    handleUpload = theFile => this.service.post('/upload', theFile)\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst protectedRoute = ({ component: Component, user, redirectPath, ...rest }) => {\n\n    return (\n        <Route {...rest} render={props => {\n            if (user) {\n                return <Component {...props} loggedInUser={user} />\n            } else {\n                return <Redirect to={{ pathname: redirectPath }} />\n            }\n        }\n        }\n        />\n    )\n}\nexport default protectedRoute;","import React, { Component } from 'react'\nimport { Button, Container, Row, Col } from 'react-bootstrap'\n\nimport '../styles/home.css'\n\nclass Home extends Component {\n    \n    render() {\n        return (\n            <div>\n                <section className=\"section1\">\n                    <p className=\"slogan\">La psicología al alcance de tu mano</p>\n                    <div className=\"btn-home\">\n                        <Button variant=\"outline-secondary\" href=\"#info\">Conócenos</Button>\n                    </div>\n                </section>\n\n                <div className=\"span-intersection\"></div>\n\n                <section className=\"section2\" id=\"info\">\n                    <Container>              \n                        <Row>\n                            <Col></Col>\n                            <Col>\n                                <Container className=\"info-icon-pack\">\n                                    <Row>\n                                        <Col>\n                                            <img src={ require('./image/clipboard.svg')} alt=\"icon-1\" className=\"icon\" />\n                                            <p className=\"text-icon\">Falta de integración de Salud Mental en atención primaria</p>\n                                        </Col>\n\n                                        <Col>\n                                            <img src={ require('./image/group.svg')} alt=\"icon-2\" className=\"icon\" />\n                                            <p className=\"text-icon\">1 de cada 4 persona sufre o sufrirá algún problema psicológico</p>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <img src={ require('./image/iceberg.svg')} alt=\"icon-3\" className=\"icon\" />\n                                            <p className=\"text-icon\">Solo el 18% de españoles se plantea ir al psicólogo</p>\n                                        </Col>\n\n                                        <Col>\n                                            <img src={ require('./image/negative-vote.svg')} alt=\"icon-4\" className=\"icon\" />\n                                            <p className=\"text-icon\">La estigmatizado o discriminado es uno de una de las principales causas </p>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n\n                <section className=\"section3\">\n                </section>\n\n                <footer className=\"footer\">\n                    <div className=\"info-business\">\n                        <h3>ThinkApp</h3>\n                \n                        {/* <h5>Follow Us</h5>\n                        <ul>\n                            <li><a className=\"link-footer\" href=\"#\" target=\"_blank\">Twitter</a></li>\n                            <li><a className=\"link-footer\" href=\"#\" target=\"_blank\">Facebook</a></li>\n                            <li><a className=\"link-footer\" href=\"#\" target=\"_blank\">Instagram</a></li>\n                        </ul> */}\n                        <p className=\"address\">Dirección</p>\n                        <address className=\"address address-complet\">ThinkApp, Paseo de la Chopera, 14, 28045 Madrid <br/>+33 (0) 619 193 088 </address>\n                    </div>\n                </footer>\n            </div>\n\n        )\n    }\n}\nexport default Home\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport Services from '../services/auth.services'\n\nimport '../styles/navbar.css'\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {showModal: false }\n        this.services = new Services\n    }\n \n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n    render() {\n\n        const saludo = this.props.userInSession ? this.props.userInSession.data.username : 'Hello baby'\n        const image = this.props.userImage\n      \n\n        if(this.props.userInSession) {\n            if(this.props.userRole === 'PROFESSIONAL') {\n                return (\n                    <div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <Link to=\"/\" className=\"col-md-8 font-weight-light logo logo-link logo-session\">ThinkApp</Link>\n                                <div className=\"col-md-4\">\n                                    <div className=\"row\">\n                                        <Link to=\"/professional/area\" onClick={this.logout} className=\"link-professional link\" ink>Area Profesional</Link>\n                                        <Link to='/professional/new-patient' className=\"link-professional link\">Añadir Paciente</Link>  \n                                        <Link to=\"/\" onClick={this.props.logout} className=\"link-professional link\">Logout</Link>\n                                    </div>\n                                    <div className=\"row identity\">\n                                        <div className=\"saludo\">Bienvenido/a {saludo}</div>\n                                        <img src={image} alt=\"Image user\" className=\"image-user\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <Link to=\"/\" className=\"col-md-8 font-weight-light logo logo-link logo-session\">ThinkApp</Link>\n                                <div className=\"col-md-4\">\n                                    <Link to=\"/patient/area\" onClick={this.logout} className=\"link\">Area Personal</Link>\n                                    <Link to='/patient/new-register'>Añadir Autorregistro</Link> \n                                    <Link to=\"/\" onClick={this.props.logout} className=\"link\">Logout</Link>\n                                </div>\n                            </div>\n                        </div>\n                        <div>Bienvenido/a {saludo}</div>\n                    </div>\n                )\n            }    \n        } else {\n            return(\n                <div className=\"container container-home\">\n                    <div className=\"row\">\n                        <Link to=\"/\" className=\"col-md-8 font-weight-light logo logo-link\">ThinkApp</Link>\n                        <div className=\"col-md-4\">\n                            <Button className=\"link\" variant=\"link\" size=\"lg\" onClick={() => this.props.handleShow()}>Login</Button>\n                            {/* <Link to=\"/auth/login\" className=\"link\">Login</Link> */}\n                            <Link to=\"/auth/signup\" className=\"link-simple link\">Signup</Link>\n                        </div>\n                    </div>\n                </div>\n            ) \n        }\n    }\n\n}\nexport default Navbar","import React, { Component } from 'react'\nimport AuthServices from '../services/auth.services'\n\nimport { Button, Form } from 'react-bootstrap'\n\nimport '../styles/login.css'\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            role: ''\n        }\n        this.authServices = new AuthServices()\n    }\n    handleInputChange = e => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleCheckChange = e => {\n        const {name, checked} = e.target\n        console.log(checked)\n        console.log(e.target)\n        this.setState({[name]: checked})\n    }\n    \n    handleFormSubmit = e => {\n        e.preventDefault()\n        const { username, password, role } = this.state\n        this.authServices.login(username, password, role )\n        .then(theLoggedUser => {\n            this.setState({\n                username: '',\n                password: '',\n                role: ''\n            })\n            this.props.setUser(theLoggedUser)\n\n           \n        // SUSTITUIMOS LA LÍNEA DE ABAJO POR LA PROPS QUE HEMOS DEFINIDO EN APP.JS\n            // theLoggedUser.data.role === 'PROFESSIONAL' ? this.props.history.push('/professional/area') : this.props.history.push('/patient/area')\n            this.props.checkRedirect(theLoggedUser)\n\n\n            console.log(theLoggedUser.data)\n            console.log(theLoggedUser.data.role)\n\n            })\n            .catch(err => console.log({err}))\n    }\n\n    render() {\n\n        return (\n            <div className=\"login\">\n                <form onSubmit={this.handleFormSubmit}>\n\n                <Form.Label className=\"label-login\">Usuario</Form.Label>\n                    <Form.Control name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} placeholder=\"Nombre de Usuario\" />\n         \n                <Form.Label className=\"label-login\">Contraseña</Form.Label>\n                    <Form.Control name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} placeholder=\"Password\" />\n               \n                <Form.Group controlId=\"formBasicCheckbox\" className=\"label-login\">\n                    <Form.Check name=\"role\" type=\"checkbox\" value={this.state.role} onChange={this.handleCheckChange} label=\"¿Profesional?\" />\n                </Form.Group>\n               \n                <Button variant=\"info\" type=\"submit\" className=\"button-session\">Iniciar sesión</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login\n\n\n{/* Usuario: <input name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} />\nContraseña: <input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\nProfesional? <input type=\"checkbox\" name=\"role\" value={this.state.role} onChange={this.handleCheckChange}></input>\n<input type=\"submit\" value=\"Iniciar sesión\" /> */}","import React, { Component } from 'react'\nimport Services  from '../services/auth.services'\n\nimport {Link} from 'react-router-dom'\nimport { Form, Col } from 'react-bootstrap'\n\nimport '../styles/profesional-form.css'\n\nclass SignupProf extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            lastName: '',\n            email: '',\n            password: '',\n            role: 'PROFESSIONAL',\n            job: '',\n            speciality: '',\n            numberCollegiate: '',\n            examinationRooms: '',\n            imageUrl: ''\n        }\n        this.service = new Services()\n        this.user = {}\n    }\n\n    handleChangeInput = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, lastName, email, password, role, job, speciality, numberCollegiate, examinationRooms, imageUrl } = this.state\n        this.service.signup(username, lastName, email, password, role, job, speciality, numberCollegiate, examinationRooms, imageUrl )\n            .then(theNewUser => {\n                console.log(theNewUser)\n\n                // LIMPIA! Now we set a new state to have empty fields  \n                this.setState({\n                    username: '',\n                    lastName: '',\n                    emial: '',\n                    password: '',\n                    role:'',\n                    job:'',\n                    speciality: '', \n                    numberCollegiate: '', \n                    examinationRooms: '', \n                    imageUrl: ''\n                })\n\n                this.props.setUser(theNewUser)\n                this.props.history.push('/professional/area')\n            })\n            .catch(err => console.log({err}))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData();\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n\n        this.service.handleUpload(uploadData)\n            .then(response => this.setState({ imageUrl: response.data.secure_url }))\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        return (\n            <>\n            <h4>Registro de Profesional</h4>\n\n            <hr></hr>\n\n            <form onSubmit={this.handleSubmit} className=\"form-professional\">\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridUsername\">\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control name=\"username\" type=\"text\" className=\"form-control\" id=\"input-username\" onChange={this.handleChangeInput} placeholder=\"Nombre\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridLastName\">\n                        <Form.Label className=\"lastname\">Apellido</Form.Label>\n                        <Form.Control name=\"lastName\" type=\"text\" className=\"form-control lastname\" id=\"input-last-name\" onChange={this.handleChangeInput} placeholder=\"Apellido\" />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridLasProfessional\">\n                        <Form.Label>Profesión</Form.Label>\n                        <Form.Control name=\"job\" type=\"text\" className=\"form-control\" id=\"input-job\" onChange={this.handleChangeInput} placeholder=\"Psicólogo/a\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridLasSpeciality\">\n                        <Form.Label>Especialidad</Form.Label>\n                        <Form.Control name=\"speciality\" type=\"text\" className=\"form-control\" id=\"input-speciality\" onChange={this.handleChangeInput} placeholder=\"Neurología\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridLasNumber\">\n                        <Form.Label>Número de Colegiado</Form.Label>\n                        <Form.Control name=\"numberCollegiate\" type=\"number\" className=\"form-control\" id=\"input-collegiate\" onChange={this.handleChangeInput} placeholder=\"12345\" />\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridRooms\">\n                        <Form.Label>Consulta</Form.Label>\n                        <Form.Control name=\"examinationRooms\" type=\"text\" className=\"form-control\" id=\"input-rooms\" onChange={this.handleChangeInput} placeholder=\"Neurosalud\" />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group as={Col} controlId=\"formGridImage\" className=\"image\">\n                    <Form.Label className=\"label-image\">Imagen</Form.Label>\n                    <Form.Control name=\"imageUrl\" type=\"file\" className=\"form-control\" id=\"input-img\" onChange={this.handleFileUpload} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridEmail\" className=\"center\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name=\"email\" type=\"email\" className=\"form-control\" id=\"input-email\" onChange={this.handleChangeInput} placeholder=\"hola@thinkapp.com\" />\n                </Form.Group>\n        \n                <Form.Group controlId=\"formGridPassword\" className=\"center\">\n                    <Form.Label>Contraseña</Form.Label>\n                    <Form.Control name=\"password\" type=\"password\" className=\"form-control\" id=\"input-password\" onChange={this.handleChangeInput} placeholder=\"Password\" />\n                </Form.Group>\n\n                <button type=\"submit\" className=\"btn btn-info btn-sm\">Crear</button>\n                <Link to=\"/\" className=\"btn btn-info btn-sm\">Cerrar</Link>\n         \n            </form>\n        </>\n           \n           )\n        }\n    }\n    export default SignupProf\n    \n                     {/* <div className=\"form-group\">\n                        <label htmlFor=\"input-username\">Nombre</label>\n                         <input name=\"username\" type=\"text\" className=\"form-control\" id=\"input-username\" onChange={this.handleChangeInput} />\n                     </div>\n    \n                     <div className=\"form-group\">\n                         <label htmlFor=\"input-lastname\">Apellido</label>\n                         <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"input-lastname\" onChange={this.handleChangeInput} />               </div>\n                   \n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-img\">Imagen</label>\n                        <input name=\"imageUrl\" type=\"file\" className=\"form-control\" id=\"input-img\" onChange={this.handleFileUpload}  />\n                    </div> \n    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-email\">Email</label>\n                        <input name=\"email\" type=\"email\" className=\"form-control\" id=\"input-email\" onChange={this.handleChangeInput} />\n                    </div>\n    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-password\">Contraseña</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"input-password\" onChange={this.handleChangeInput} />\n                    </div>\n    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-job\">Profesión</label>\n                        <input name=\"job\" type=\"text\" className=\"form-control\" id=\"input-job\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-speciality\">Especialidad</label>\n                        <input name=\"speciality\" type=\"text\" className=\"form-control\" id=\"input-speciality\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-collegiate\">Número de Colegiado/a</label>\n                        <input name=\"numberCollegiate\" type=\"number\" className=\"form-control\" id=\"input-collegiate\" onChange={this.handleChangeInput} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"input-rooms\">Consulta</label>\n                        <input name=\"examinationRooms\" type=\"text\" className=\"form-control\" id=\"input-rooms\" onChange={this.handleChangeInput} />\n                    </div>\n    \n                    <button type=\"submit\" className=\"btn btn-info btn-sm\">Crear</button>\n                    <Link to=\"/\" className=\"btn btn-info btn-sm\">Cerrar</Link>\n                    // \n    \n                    {/* <button className=\"btn btn-info btn-sm\" onClick={this.props.closeModal}>Cerrar</button> */}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/professional`,\n            withCredentials: true\n        })\n    }\n\n    signupPatient = (username, lastName, email, password, role, professional, treatment, imageUrl ) => {\n        return this.service.post('/new-patient', { username, lastName, email, password, role, professional, treatment, imageUrl}) }\n    getPatients = () => this.service.get('/getAllPatients')\n    getOnePatient = id => this.service.get(`/getOnePatient/${id}`)\n    handleUpload = theFile => this.service.post('/upload', theFile)\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport '../styles/patient-cards.css'\n\n\nconst PatientCard = ({ username, lastName, imageUrl,email, treatment, _id }) => {\n\n    return (\n        <div className=\"patient-card\">\n            <img src={imageUrl} alt=\"Foto Paciente\" className=\"photo-patient\"/>\n            <h2>{username} {lastName}</h2>\n            <p>{email}</p>\n            <p>Tratamiento: {treatment}</p>\n            <hr></hr>\n            <Link className=\"btn btn-sm btn-info btn-details\" to={`/professional/details-patient/${_id}`}>Ver detalles</Link>  \n        </div>\n    )\n}\n\nexport default PatientCard","import React, { Component } from 'react'\nimport Services  from '../services/professional.services'\n\n\nclass SignupPatient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            lastName:'',\n            email: '',\n            password: '',\n            role: \"PATIENT\",\n            professional: JSON.parse(localStorage.getItem('userID')),  // Obtenemos el id del profesional a través de local storage\n            treatment: '',\n            imageUrl: ''\n        }\n        this.service = new Services()\n    }\n    \n    handleChangeInput = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, lastName, email, password, role, professional, treatment, imageUrl } = this.state\n\n        this.service.signupPatient( username, lastName, email, password, role, professional, treatment, imageUrl )  //.signupPatient lo coge del Services import\n           \n            .then( x => {\n                this.props.closeModal()\n                this.props.updatePatientList()\n\n\n                // console.log(theNewUser)\n\n\n                 // LIMPIA! Now we set a new state to have empty fields  \n                //  this.setState({\n                //     username: '',\n                //     lastName:'',\n                //     email: '',\n                //     password: '',\n                //     role: '',\n                //     professional: '',\n                //     treatment: '',\n                //     imageUrl: ''\n                // })\n                // this.props.closeModal()\n                // this.props.redirectRoute()\n                // this.props.updateCoasterList()   // this.props.history.push('/')\n            })\n            .catch(err => console.log({err}))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData();\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n\n        this.service.handleUpload(uploadData)\n            .then(response => this.setState({ imageUrl: response.data.secure_url }))\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n\n        return (\n            <>\n            <h4>Añadir nuevo paciente</h4>\n\n            <hr></hr>\n\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-name\">Nombre</label>\n                    <input name=\"username\" type=\"text\" className=\"form-control\" id=\"input-username\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-lastname\">Apellido</label>\n                    <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"input-lastname\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-email\">Email</label>\n                    <input name=\"email\" type=\"email\" className=\"form-control\" id=\"input-email\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-password\">Contraseña</label>\n                    <input name=\"password\" type=\"password\" className=\"form-control\" id=\"input-password\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Tratamiento</label>\n                    <select name=\"treatment\" id=\"input-treatment\" selected={this.state.treatment} onChange={this.handleChangeInput} >\n                        <option disabled selected value>Select an option</option>\n                        <option value=\"Depresión\">Depresión</option>\n                        <option value=\"Ansiedad\" >Ansiedad</option>\n                        <option value=\"Fobia\" >Fobia</option>\n                        <option value=\"Hiperactividad\" >Hiperactividad</option>\n                        <option value=\"Trast. de la conducta alimentaria\" >Trast. de la conducta alimentaria</option>\n                        <option value=\"Trast. del sueño\">Trats. del sueño</option>\n                    </select> \n                </div>\n                <div className=\"form-group\">\n                        <label htmlFor=\"input-img\">Imagen</label>\n                        <input name=\"imageUrl\" type=\"file\" className=\"form-control\" id=\"input-img\" onChange={this.handleFileUpload} />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-info btn-sm\">Crear</button>\n                <button className=\"btn btn-info btn-sm\" onClick={this.props.closeModal}>Cerrar</button>\n                \n            </form>\n        </>\n           \n        )\n    }\n}\nexport default SignupPatient","import React, { Component } from 'react'\nimport Services from '../services/professional.services'\n\nimport PatientCard from './Patient-card'\nimport PatientForm from './Patient-form'\n\nimport { Modal } from 'react-bootstrap'\n\n\nclass PatientList extends Component {\n\n    constructor() {\n        super()\n        this.state = {patients: [], showModal: false }\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n    \n    updateList = () => {\n        this.services.getPatients()\n        .then(response => this.setState({ patients: response.data}))\n        .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n    \n   \n    render() {\n        \n        return (\n            <>\n                <article>\n                    <p>Añadir nuevo paciente</p>\n                    <Modal show={this.state.showModal} onHide={this.handleModalClose}>\n                       \n                        <Modal.Body>\n                            <PatientForm closeModal={this.handleModalClose} updatePatientList={this.updateList} />\n                        </Modal.Body>\n\n                    </Modal>\n                    <button className=\"btn btn-info btn-big\" onClick={this.handleModalOpen}>Añadir</button>\n                </article>\n                    <hr></hr>\n\n                <div className=\"container\">\n                    <h3>Listado de Pacientes</h3>\n                    <div className=\"row\">\n                        {this.state.patients && this.state.patients.map(patient => <PatientCard key={patient._id} {...patient} />)}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default PatientList\n\n","import React, { Component } from 'react'\nimport PatientsList from './Patient-list'\n\n\nclass ProfArea extends Component {\n\n    constructor() {\n        super( )\n        this.state = { }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"title-window\">Area Profesional</h2>\n                <hr></hr>\n                <PatientsList />\n            </div>\n        )\n    }\n}\nexport default ProfArea\n\n\n","import React from 'react'\n\n\n\nconst RegistersPatientDetails = ({ title, dateCreated, context, imageUrl, think, feel, doing, happen, _id }) => {\n\n    return (\n        <div>\n            <div>\n                <article>\n                    <h2>{title}</h2>\n                    <p><strong>Fecha:</strong> {dateCreated}</p>\n                    <p><strong>¿Dónde se encontraba?</strong> {context}</p>\n                    <p>Imagen de la ubicación: <img src={imageUrl} alt=\"Imagen del contexto\"></img></p>\n                    <p><strong>¿Qué pensaba?</strong> {think}</p>\n                    <p><strong>¿Cómo se sentía?</strong> {feel}</p>\n                    <p><strong>¿Qué hizo?</strong> {doing}</p>\n                    <p><strong>¿Qué ocurrió después?</strong> {happen}</p> \n                    <hr></hr>\n                </article>\n            </div>\n        </div>\n    )\n}\n\nexport default RegistersPatientDetails","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/professional.services'\n\nimport RegistersPatient from './Register-patient-details'\n\n\nclass PatientDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            patient: {}, \n            registers: []\n        }\n        this.service = new Services()\n    }\n\n    componentDidMount() {\n        this.service.getOnePatient(this.props.match.params.id)\n        .then(response => {\n            console.log(response.data)\n            console.log(response.data.registersPatient)\n            console.log(response.data.thePatient.username)\n\n           return this.setState({ patient: response.data.thePatient, registers: response.data.registersPatient })\n        })\n        .catch(err => console.log('err', err))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Detalles del Paciente</h1>\n                <hr></hr>\n                <article>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-6\">\n                            <h2> {this.state.patient.username} {this.state.patient.lastName}</h2>\n                            <div className=\"col-md-4\">\n                                <img src={this.state.patient.imageUrl} alt=\"Imagen de perfil\"></img>\n                            </div>\n                            <p>email: {this.state.patient.email}</p>\n                            <h3>Tratamiento: {this.state.patient.treatment}</h3>\n                            <p><strong>Descripción:</strong> {this.state.patient.description}</p>\n                            <hr></hr>\n                            <p><strong>Registros</strong></p>\n\n                            <div className=\"row\">\n                                {this.state.registers && this.state.registers.map(register => <RegistersPatient key={register._id} {...register} />)}\n                            </div>\n                            \n                        \n                           \n                            <Link className=\"btn btn-big btn-info\" to=\"/professional/area\">Volver</Link>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\nexport default PatientDetails\n","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/patient`,\n            withCredentials: true\n        })\n    }\n\n    newRegister = (title, dateCreated, role, context, imageUrl, think, feel, doing, happen, patient ) => {\n        return this.service.post('/new-register', { title, dateCreated, role, context, imageUrl, think, feel, doing, happen, patient })}\n    getRegister = () => this.service.get('/getAllRegisters')\n    getOneRegister = id => this.service.get(`/getOneRegister/${id}`)\n    handleUpload = theFile => this.service.post('/upload', theFile)\n\n    handleAudioUpload = uploadData => this.service.post('upload', uploadData, { headers: {'Content-Type': 'multipart/form-data' }, withCredentials: true })\n            .then(res => {\n                console.log(\"AUDIO FILE UPLOADED\");\n                console.log(res);\n                return res.data;\n            })\n            .catch(err => console.log(err));\n    \n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst RegisterCard = ({ title, dateCreated, context, think, feel, doing, happen, _id }) => {\n\n    return (\n        <div>\n            <div className=\"col-md-4\">\n                <article>\n                    <h2>{title}</h2>\n                    <p>Fecha: {dateCreated}</p>\n                    <p>¿Cómo me sentía? {feel}</p>\n                    <Link className=\"btn btn-sm btn-dark\" to={`/patient/details-register/${_id}`}>Ver detalles</Link>  \n                </article>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterCard","import React, { Component } from 'react'\nimport Services  from '../services/patient.services'\n\n\nclass NewRegister extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            dateCreated: '',\n            role: 'REGISTER',\n            context: '',\n            imageUrl: '',\n            think: '',\n            feel: '',\n            doing: '',\n            happen: '',\n            patient: JSON.parse(localStorage.getItem('userID')),  // Obtenemos el id del profesional a través de local storage\n        }\n        this.service = new Services()\n    }\n    \n    handleChangeInput = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { title, dateCreated, role, context, imageUrl, think, feel, doing, happen, patient } = this.state\n\n        this.service.newRegister( title, dateCreated, role, context, imageUrl, think, feel, doing, happen, patient )  //.newRegister lo coge del Services import\n            .then( x => {\n                this.props.closeModal()\n                this.props.updateRegisterList()\n            })\n            .catch(err => console.log({err}))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData();\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n\n        this.service.handleUpload(uploadData)\n            .then(response => this.setState({ imageUrl: response.data.secure_url }))\n            .catch(err => console.log(err))\n    }\n\n    // handleAudioUpload = url => {\n\n    //     console.log(\"This is the Blob \",url)\n       \n    //     let uploadData = new FormData();\n    //     uploadData.append(\"blob\", url);\n\n    //     this.services.handleAudioUpload(uploadData)\n    //         .then(response => this.setState({ ...this.state, audio: response.secure_url }))\n    //         .catch(err => console.log(err))\n    // }\n\n\n\n    render() {\n\n        return (\n            <>\n            <h4>Añadir nuevo registro</h4>\n\n            <hr></hr>\n\n            <form onSubmit={this.handleSubmit}>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-title\">Título</label>\n                    <input name=\"title\" type=\"text\" className=\"form-control\" id=\"input-title\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-date\">Fecha</label>\n                    <input name=\"dateCreated\" type=\"date\" className=\"form-control\" id=\"input-date\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-context\">¿Dónde estoy?</label>\n                    <input name=\"context\" type=\"text\" className=\"form-control\" id=\"input-context\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                        <label htmlFor=\"input-img\">Imagen del lugar</label>\n                        <input name=\"imageUrl\" type=\"file\" className=\"form-control\" id=\"input-img\" onChange={this.handleFileUpload} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-think\">¿Qué pienso?</label>\n                    <input name=\"think\" type=\"text-area\" className=\"form-control\" id=\"input-think\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                     <label>¿Cómo me siento? </label>\n                     <select name=\"feel\" id=\"input-feel\" selected={this.state.feel} onChange={this.handleChangeInput} >\n                         <option disabled selected value>Select an option</option>\n                         <option value=\"Feliz\">Feliz</option>\n                         <option value=\"Estresado/a\" >Estresado/a</option>\n                         <option value=\"Indiferente\" >Indiferente</option>\n                         <option value=\"Preocupado/a\" >Preocupado/a</option>\n                         <option value=\"Triste\" >Triste</option>\n                         <option value=\"Aburrido/a\">Aburrido/a</option>\n                         <option value=\"Furioso/a\">Furioso/a</option>\n                         <option value=\"Cansado/a\">Cansado/a</option>\n                         <option value=\"Genial\">Genial</option>\n                    </select> \n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-doing\">¿Qué hago?</label>\n                    <textarea name=\"doing\" type=\"text-area\" className=\"form-control\" id=\"input-doing\" onChange={this.handleChangeInput} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"input-happen\">¿Qué pasa después?</label>\n                    <textarea name=\"happen\" type=\"text-area\" className=\"form-control\" id=\"input-happen\" onChange={this.handleChangeInput} />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-info btn-sm\">Crear</button>\n                <button className=\"btn btn-info btn-sm\" onClick={this.props.closeModal}>Cerrar</button>\n            </form>\n        </>\n           \n        )\n    }\n}\nexport default NewRegister","import React, { Component } from 'react'\nimport Services from '../services/patient.services'\n\nimport RegisterCard from './Register-card'\nimport RegisterForm from './Register-form'\n\nimport { Modal } from 'react-bootstrap'\n\n\nclass RegisterList extends Component {\n\n    constructor() {\n        super()\n        this.state = {registers: [], showModal: false}\n        this.services = new Services()\n    }\n\n    componentDidMount = () => this.updateList()\n\n    updateList = () => {\n        this.services.getRegister()\n            .then(response => this.setState({ registers: response.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleModalOpen = () => this.setState({ showModal: true })\n    handleModalClose = () => this.setState({ showModal: false })\n\n\n\n    render() {\n\n        return (\n            <>\n                <article>\n                    <p>Añadir nuevo registro</p>\n                    <Modal show={this.state.showModal} onHide={this.handleModalClose}>\n                        <Modal.Body>\n                            <RegisterForm closeModal={this.handleModalClose} updateRegisterList={this.updateList} />\n                        </Modal.Body>\n                    </Modal>\n                    <button className=\"btn btn-info btn-big\" onClick={this.handleModalOpen}>Añadir</button>\n                </article>\n                <hr></hr>\n                    \n                <div className=\"container\">\n                    <h1>Listado de Registros</h1>\n                    <div className=\"row\">\n  \n                        { this.state.registers.map(register => <RegisterCard key={register._id} {...register} />)}\n                    \n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default RegisterList","import React, { Component } from 'react'\nimport RegisterList from './Register-list'\n\n\nclass PatientArea extends Component {\n\n    constructor() {\n        super()\n        this.state = {}\n    }\n    \n    render() {\n        return (\n            <div>\n                <h1>Estás en tu area privada de paciente</h1>\n                <RegisterList />\n            </div>\n        )\n    }\n}\nexport default PatientArea","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Services from '../services/patient.services'\n\n\nclass RegisterDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { register: {} }\n        this.service = new Services()\n    }\n\n    componentDidMount() {\n        this.service.getOneRegister(this.props.match.params.id)\n            .then(response => this.setState({ register: response.data }))\n            .catch(err => console.log('err', err))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Detalles del Registro</h1>\n                <hr></hr>\n                <article>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-6\">\n                            <h1>Detalles de {this.state.register.title}</h1>\n                            <p><strong>Contexto:{this.state.register.context} </strong></p>\n                            <p>{this.state.register.dateCreated}</p>\n                            <hr></hr>\n                            <p><strong>¿Qué pensé?</strong> {this.state.register.think} </p>\n                            <p><strong>¿Cómo me sentí?</strong> {this.state.register.feel} </p>\n                            <p><strong>¿Qué hice?</strong> {this.state.register.doing} </p>\n                            <p><strong>¿Qué pasó después?</strong> {this.state.register.happen} </p>\n                            <Link className=\"btn btn-big btn-dark\" to=\"/patient/area\">Volver</Link>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img src={this.state.register.imageUrl} alt={this.state.register.title}></img>\n                        </div>\n                        \n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\nexport default RegisterDetails","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AuthServices from './services/auth.services'\nimport ProtectedRoute from './components/routes/ProtectedRoute'\n\nimport { withRouter } from 'react-router'  // Nos sirve para traernos el history y redirigir en el login\n\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\nimport Login from './components/Login'\nimport ProfessionalSignup from './components/Professional-form'\nimport ProfessionalArea from './components/Professional-area'\nimport PatientSignup from './components/Patient-form'\nimport PatientDetail from './components/Patient-details'\nimport PatientArea from './components/Patient-area'\nimport NewRegister from './components/Register-form'\nimport RegisterDetail from './components/Register-details'\nimport {Modal} from 'react-bootstrap'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { loggedInUser: null, show: false, showModalSignup: false }     // loggerInUser te lo traes del ProtectedRoute  \n    this.authServices = new AuthServices()\n  }\n  \n  // MODAL SIGNUP\n  handleModalOpen = () => this.setState({ showModalSignup: true })\n  handleModalClose = () => this.setState({ showModalSignup: false })\n\n  //RUTA REDIRECCIÓN DEL SIGNUP DEL MODAL\n  redirectRoute = () =>  this.props.history.push('/professional/area')\n\n  // MODAL LOGIN\n  setShow = (value) => this.setState({show: value})\n  handleShow = () => this.setShow(true)\n  handleClose = () => this.setShow(false)\n  \n  // INDICAMOS LA RUTA TRAS LOGUEARSE SEGÚN EL ROL DE LA PERSONA\n  checkRedirect = (theLoggedUser)=> {\n    theLoggedUser.data.role === 'PROFESSIONAL' ? this.props.history.push('/professional/area') : this.props.history.push('/patient/area')\n  }\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user })\n    console.log(\"Un componente ha cambiado el usuario en App:\", this.state.loggedInUser)\n    console.log(this.state.loggedInUser.data._id)\n    \n    // Traemos el ID de la sesion iniciada desde Local storage \n    let userID = this.state.loggedInUser.data._id;          \n    localStorage.setItem('userID', JSON.stringify(userID));   \n  }\n\n  logout = () => {\n    localStorage.removeItem('userID');\n    this.authServices.logout()\n        .then(x => {\n            this.setTheUser(null)            \n        })\n        .catch(err => console.log(err))\n  }\n\n  fetchUser = () => {\n    if(this.state.loggedInUser === null) {\n      this.authServices.loggedin()\n        .then(response => {\n          console.log(response)\n          this.setState({loggedInUser: response})})\n        .catch(x => this.setState({ loggedInUser: false}))\n    }\n  }\n  \n\n\n  render() {\n    \n    this.fetchUser()\n    console.log(this.props)\n    \n    if(this.state.loggedInUser) {\n      return (\n        <>\n        <Navbar  setUser={this.setTheUser} userInSession={this.state.loggedInUser} userRole={this.state.loggedInUser.data.role} userImage={this.state.loggedInUser.data.imageUrl}logout={this.logout} />\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <ProtectedRoute path=\"/professional/area\" user={this.state.loggedInUser} component={ProfessionalArea} />\n          <Route path=\"/professional/new-patient\" exact component={PatientSignup} />\n          <Route path=\"/professional/details-patient/:id\" exact component={PatientDetail} />\n          \n          <ProtectedRoute path=\"/patient/area\" user={this.state.loggedInUser} component={PatientArea} />\n          <Route path=\"/patient/new-register\" exact component={NewRegister} />\n          <Route path=\"/patient/details-register/:id\" exact component={RegisterDetail} />\n        </Switch>\n      </>\n    )\n  } else {\n    return (\n      <>\n      {/* EN ESTA NAVBAR LE PASAMOS LAS FUNCTION DE MODAL PARA EL LOGIN */}\n        <Navbar setShow={this.setShow} handleShow={this.handleShow} handleClose={this.handleClose} setUser={this.setTheUser} userInSession={this.state.loggedInUser} logout={this.logout} />\n\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <ProtectedRoute path=\"/professional/area\" user={this.state.loggedInUser} component={ProfessionalArea} />\n          <ProtectedRoute path=\"/patient/area\" user={this.state.loggedInUser} component={PatientArea} />\n          {/* <Route path=\"/auth/login\" exact render={match => <Login {...match} setUser={this.setTheUser} />} /> */}\n        </Switch>\n\n        <Modal show={this.state.show} onHide={this.handleClose} className=\"bsClass\">\n          <Modal.Header closeButton>\n            <Modal.Title><h3>Iniciar sesión</h3></Modal.Title>\n          </Modal.Header>\n          <Modal.Body><Login setUser={this.setTheUser} checkRedirect={this.checkRedirect} /></Modal.Body>\n        </Modal>\n\n          {/* <Route path=\"/auth/signup\" exact render={match => <ProfessionalSignup {...match} setUser={this.setTheUser} />} /> */}\n       \n        {/* MODAL SIGNUP */}\n        <Modal show={this.state.showModalSignup} onHide={this.handleModalClose}>\n\n          <Modal.Body>\n              <ProfessionalSignup setUser={this.setTheUser}  redirectRoute={this.redirectRoute}/>\n          </Modal.Body>\n\n        </Modal>\n      </>\n    )\n  }\n}\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/clipboard.852943b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/group.9c887338.svg\";","module.exports = __webpack_public_path__ + \"static/media/iceberg.93878f14.svg\";","module.exports = __webpack_public_path__ + \"static/media/negative-vote.d62bc5b6.svg\";"],"sourceRoot":""}